import tkinter
import csv
import random
import sys
from csv import DictReader
from pathlib import Path
from tkinter import StringVar, OptionMenu
from tkinter import messagebox
#filepath=Path('C:\\Users\\simmy\\PycharmProjects\\pythonProject2\\Library\\book.csv')
#bookdict={'Bookid':'','Book title':'','Author':'','Status':''}
#with open('book.csv', 'w') as bookfile:
#    b = csv.DictWriter(bookfile,bookdict.keys())
#    b.writeheader()
#memdict={'Memid':'','Mem name':'','Phoneno':'','Email':''}
#with open('member.csv', 'w') as memfile:
#    m = csv.DictWriter(memfile,memdict.keys())
#    m.writeheader()
class Library:
    def __init__(self,title):
        self.bookid=''
        self.book=title
        self.author=''
        self.status=''
    def printauthor(self,author):
        #self.author=author
        with open('book.csv','r') as authread:
            auth=csv.DictReader(authread)
            for a in auth:
                if a['Author']==author:
                    print(a['Author'])
                    print(a['Bookid'],'\t',a['Book title'],'\t',a['Status'])
                    break
                else:
                    print('Books of the author not in resourses. Sorry')
    def genbookid(self):
        pass



class Member:
    def __init__(self,name):
        self.memberid=''
        self.memname=name
        self.bookstaken=''
        self.duedate=''
    def memprint(self):
        print(self.memberid,'\t',self.memname,'\t',self.bookstaken,'\t',self.duedate)
    def rentbook(self):
        pass
    def checkout(self):
        pass

#Adding book into the library
def addbook1():
    #Frame for addition
    frame3 = tkinter.LabelFrame(window, width=800, height=450, bg='pink')
    frame3.grid(row=2, column=0, sticky='nsew')

    head=tkinter.Label(frame3,text='******You can add books******')
    head.grid(row=2,column=0,columnspan=3,sticky='nsew')
    idlabel=tkinter.Label(frame3,text='Book Id :')
    idlabel.grid(row=3,column=0,sticky='nsew')
    n = random.randint(1, 999)# creating a unique bookid
    b='VI' + str(n)
    bookid=tkinter.StringVar()
    bookid.set('VI' + str(n))

    identry = tkinter.Label(frame3,textvariable=bookid)
    identry.grid(row=3, column=1,sticky='nsew')
    booktitle=tkinter.Label(frame3,text='Book Title:')
    booktitle.grid(row=4,column=0,sticky='nsew')
    titleentry=tkinter.Entry(frame3)
    titleentry.grid(row=4,column=1,sticky='nsew')
    author=tkinter.Label(frame3,text='Author:')
    author.grid(row=5,column=0,sticky='nsew')
    authorentry=tkinter.Entry(frame3)
    authorentry.grid(row=5,column=1,sticky='nsew')
    status=tkinter.Label(frame3,text='Status:')
    status.grid(row=6,column=0,sticky='nsew')
    statusentry=tkinter.Entry(frame3)
    statusentry.grid(row=6,column=1,sticky='nsew')
    def save():
        title=titleentry.get()
        print(title)
        auth=authorentry.get()
        print(auth)
        stat=statusentry.get()
        if title and auth and stat:
            bk = Library(title)
            with open('book.csv', 'a') as bookfile:
                book = csv.writer(bookfile)
                book.writerow([b,bk.book,auth,stat])
        else:
            messagebox.showerror(title='Error',message='Fields cannot be empty')
    save=tkinter.Button(frame3,command=save,text='Save')
    save.grid(row=7,column=0,sticky='nsew')
    # After saving, reset fields
    def framedty():
        frame3.destroy()
    def reset():
        addbook1()
        titleentry.delete(0, tkinter.END)  # Reset book title field
        authorentry.delete(0, tkinter.END)  # Reset author field
        statusentry.delete(0, tkinter.END)  # Reset status field
    resetfield=tkinter.Button(frame3,command=reset,text='Reset')
    resetfield.grid(row=7,column=1,sticky='nsew')
    addexit=tkinter.Button(frame3,command=framedty,text='Exit')
    addexit.grid(row=7,column=2,sticky='nsew')

#Delete book function
def delbook1():
    frame3 = tkinter.LabelFrame(window, width=800, height=450, bg='pink')
    frame3.grid(row=2, column=0, sticky='nsew')
    idlabel=tkinter.Label(frame3,text='Book Id :')
    idlabel.grid(row=2,column=0,sticky='nsew')
    identry=tkinter.Entry(frame3)
    identry.grid(row=2,column=1,sticky='nsew')
    def show():
        id =str(identry.get())
        found=False
        newfound=False
        with open('book.csv','r') as book1file,\
            open('tempbook.csv',mode='w') as copyfile:
            bid=csv.DictReader(book1file)
            fieldnames=bid.fieldnames
            writer=csv.DictWriter(copyfile,fieldnames)
            writer.writeheader()
            for item in bid:
                print(item)
                if item['Bookid']==id:
                    nm=item['Book title']
                    au=item['Author']
                    st=item['Status']
                    booktitle = tkinter.Label(frame3, text="Book name :  %s" % item['Book title'])
                    booktitle.grid(row=3, columnspan=2, sticky='nw')
                    bookauth = tkinter.Label(frame3, text="Author :  %s" % item['Author'])
                    bookauth.grid(row=4, columnspan=2, sticky='nw')
                    bookstat = tkinter.Label(frame3, text="Status :  %s" % item['Status'])
                    bookstat.grid(row=5, columnspan=2, sticky='nw')
                    found=True
                elif item['Bookid']!=id:
                    writer.writerow(item)# writes the other files into new csv except for the delete file
                    newfound=True

            if not found:
                messagebox.showerror(title='Error', message='No Book in that ID')

    def delcopy():#DElete button
        import os
        os.replace('tempbook.csv','book.csv')# replaces the original data file with the content of new csv file
        messagebox.showerror(title='Success', message='Book deleted')

    showbutton=tkinter.Button(frame3,text='Show',command=show)
    showbutton.grid(row=2,column=2)

    delbutton=tkinter.Button(frame3,command=delcopy,text='Delete')
    delbutton.grid(row=7,column=1,sticky='nsew')
    delexit=tkinter.Button(frame3,command=frame3.destroy,text='Exit')
    delexit.grid(row=7,column=2,sticky='nsew')
    '''
#login window for authentication
def loginwin():
    loginwindow=tkinter.Toplevel(window)
    loginwindow.geometry('200x100')
    loginwindow.title('Password window')
    username=tkinter.Label(loginwindow,text='Username')
    username.grid(row=0,column=0)
    userentry=tkinter.Entry(loginwindow)
    userentry.grid(row=0,column=1)

    password=tkinter.Label(loginwindow,text='Password')
    password.grid(row=1,column=0)
    passentry=tkinter.Entry(loginwindow)
    passentry.grid(row=1,column=1)
    def validate():
        if userentry.get()=='admin' and passentry.get()=='password':
            messagebox.showinfo(title='Login Success',message='Successful Login')
            loginwindow.destroy()
            #addbook1()#calling function for adding books
        else:
            messagebox.showerror(title='Error',message='Login failed')


    check=tkinter.Button(loginwindow,text='Login',command=lambda :[validate()])
    check.grid(row=2,column=1)

'''
def searchauthor():
    author=[]
    frame3 = tkinter.LabelFrame(window, width=800, height=450, bg='pink')
    frame3.grid(row=2, column=0, sticky='nsew')
    auth=tkinter.Label(frame3,text='Author:')
    auth.grid(row=2,column=0,sticky='nsew')

    with open('book.csv','r') as bookfile:
        b=DictReader(bookfile)
        for item in b:
            a=item['Author']
            author.append(a)
        print(author)
    def selected(*args):
        ch=clicked.get()
        with open('book.csv', 'r') as book1file:
            b1 = DictReader(book1file)
            for item in b1:
                if item['Author']==ch:
                    au = item['Bookid']
                    nm = item['Book title']
                    st = item['Status']
                    bookid = tkinter.Label(frame3, text="Book Id :  %s" % item['Bookid'])
                    bookid.grid(row=3, columnspan=2, sticky='nw')
                    booktitle = tkinter.Label(frame3, text="Book Title :  %s" % item['Book title'])
                    booktitle.grid(row=4, columnspan=2, sticky='nw')
                    bookstat = tkinter.Label(frame3, text="Status :  %s" % item['Status'])
                    bookstat.grid(row=5, columnspan=2, sticky='nw')
    clicked = tkinter.StringVar(frame3)
    clicked.set(author[0])
    authentry = OptionMenu(frame3, clicked,*author)
    authentry.grid(row=2, column=1)
    clicked.trace_add("write", selected)
    delexit=tkinter.Button(frame3,command=frame3.destroy,text='Exit')
    delexit.grid(row=7,column=2,sticky='nsew')

def searchtitle():
    title=[]
    frame3 = tkinter.LabelFrame(window, width=800, height=450, bg='pink')
    frame3.grid(row=2, column=0, sticky='nsew')
    auth=tkinter.Label(frame3,text='Title:')
    auth.grid(row=2,column=0,sticky='nsew')

    with open('book.csv','r') as bookfile:
        b=DictReader(bookfile)
        for item in b:
            a=item['Book title']
            title.append(a)
        print(title)
    def selected(*args):
        ch=clicked.get()
        with open('book.csv', 'r') as book1file:
            b1 = DictReader(book1file)
            for item in b1:
                if item['Book title']==ch:
                    au = item['Bookid']
                    nm = item['Author']
                    st = item['Status']
                    bookid = tkinter.Label(frame3, text="Book Id :  %s" % item['Bookid'])
                    bookid.grid(row=3, columnspan=2, sticky='nw')
                    bookauth = tkinter.Label(frame3, text="Author:  %s" % item['Author'])
                    bookauth.grid(row=4, columnspan=2, sticky='nw')
                    bookstat = tkinter.Label(frame3, text="Status :  %s" % item['Status'])
                    bookstat.grid(row=5, columnspan=2, sticky='nw')
    clicked = tkinter.StringVar(frame3)
    clicked.set(title[0])
    titleentry = OptionMenu(frame3, clicked,*title)
    titleentry.grid(row=2, column=1)
    clicked.trace_add("write", selected)
    titleexit=tkinter.Button(frame3,command=frame3.destroy,text='Exit')
    titleexit.grid(row=7,column=2,sticky='nsew')

def addmem():
    #Frame for addition
    frame3 = tkinter.LabelFrame(window, width=800, height=450, bg='pink')
    frame3.grid(row=2, column=0, sticky='nsew')

    head=tkinter.Label(frame3,text='******ADD MEMBERS******')
    head.grid(row=2,column=0,columnspan=3,sticky='nsew')
    idlabel=tkinter.Label(frame3,text='Membership Id :')
    idlabel.grid(row=3,column=0,sticky='nsew')
    n = random.randint(1, 999)# creating a unique bookid
    b='VI' + str(n)
    memid=tkinter.StringVar()
    memid.set('MV' + str(n))

    identry = tkinter.Label(frame3,textvariable=memid)
    identry.grid(row=3, column=1,sticky='nsew')
    namelabel=tkinter.Label(frame3,text='Name:')
    namelabel.grid(row=4,column=0,sticky='nsew')
    nameentry=tkinter.Entry(frame3)
    nameentry.grid(row=4,column=1,sticky='nsew')
    phno=tkinter.Label(frame3,text='Phone number:')
    phno.grid(row=5,column=0,sticky='nsew')
    phnoentry=tkinter.Entry(frame3)
    phnoentry.grid(row=5,column=1,sticky='nsew')
    email=tkinter.Label(frame3,text='Email:')
    email.grid(row=6,column=0,sticky='nsew')
    emailentry=tkinter.Entry(frame3)
    emailentry.grid(row=6,column=1,sticky='nsew')
    def save():
        name=nameentry.get()
        print(name)
        phno1=phnoentry.get()
        print(phno1)
        email1=emailentry.get()
        if name and phno1 and email1:
            m1 = Member(name)
            with open('member.csv', 'a') as memfile:
                mem = csv.writer(memfile)
                mem.writerow([b,m1.memname,phno1,email1])# memname is the variable created in the class
        else:
            messagebox.showerror(title='Error',message='Fields cannot be empty')
    save=tkinter.Button(frame3,command=save,text='Save')
    save.grid(row=7,column=0,sticky='nsew')
    # After saving, reset fields
    def framedty():
        frame3.destroy()
    def reset():
        addmem()
        nameentry.delete(0, tkinter.END)  # Reset book title field
        phnoentry.delete(0, tkinter.END)  # Reset author field
        emailentry.delete(0, tkinter.END)  # Reset status field
    resetfield=tkinter.Button(frame3,command=reset,text='Reset')
    resetfield.grid(row=7,column=1,sticky='nsew')
    addexit=tkinter.Button(frame3,command=framedty,text='Exit')
    addexit.grid(row=7,column=2,sticky='nsew')

def delmem():
    frame3 = tkinter.LabelFrame(window, width=800, height=450, bg='pink')
    frame3.grid(row=2, column=0, sticky='nsew')
    idlabel=tkinter.Label(frame3,text='Member Id :')
    idlabel.grid(row=2,column=0,sticky='nsew')
    identry=tkinter.Entry(frame3)
    identry.grid(row=2,column=1,sticky='nsew')
    def show():
        id =str(identry.get())
        found=False
        newfound=False
        with open('member.csv','r') as memfile,\
            open('tempmem.csv',mode='w') as copyfile:#creating a csv file
            mid=csv.DictReader(memfile)
            fieldnames=mid.fieldnames
            writer=csv.DictWriter(copyfile,fieldnames)# temp csv file with the same fields
            writer.writeheader()
            for item in mid:
                print(item)
                if item['Memid']==id:
                    nm=item['Mem name']
                    au=item['Phoneno']
                    st=item['Email']
                    memname = tkinter.Label(frame3, text="Book name :  %s" % item['Mem name'])
                    memname.grid(row=3, columnspan=2, sticky='nw')
                    memph = tkinter.Label(frame3, text="Author :  %s" % item['Phoneno'])
                    memph.grid(row=4, columnspan=2, sticky='nw')
                    mememail = tkinter.Label(frame3, text="Status :  %s" % item['Email'])
                    mememail.grid(row=5, columnspan=2, sticky='nw')
                    found=True
                elif item['Memid']!=id:
                    writer.writerow(item)# writes the other files into new csv except for the delete file
                    newfound=True

            if not found:
                messagebox.showerror(title='Error', message='Library Member deleted')

    def delcopy():#DElete button
        import os
        os.replace('tempmem.csv','member.csv')# replaces the original data file with the content of new csv file
        messagebox.showerror(title='Success', message='Book deleted')

    showbutton=tkinter.Button(frame3,text='Show',command=show)
    showbutton.grid(row=2,column=2)

    delbutton=tkinter.Button(frame3,command=delcopy,text='Delete')
    delbutton.grid(row=7,column=1,sticky='nsew')
    delexit=tkinter.Button(frame3,command=frame3.destroy,text='Exit')
    delexit.grid(row=7,column=2,sticky='nsew')

window=tkinter.Tk()
window.title('Library')
window.geometry('800x500')

#Frame1 Title frame
frame1=tkinter.LabelFrame(window,width=800,height=50,bg='white')
frame1.grid(row=0,columnspan=2,sticky='nsew')
label1=tkinter.Label(frame1,text="**********Welcome to Vision Library**********")
label1.grid(row=0,columnspan=2,padx=10,pady=10)

#Frame2 contains all buttons sticky nsew streches the buttons uniformly
frame2=tkinter.LabelFrame(window,width=800,height=250)
frame2.grid(row=1,columnspan=2,sticky='nsew')

addbook=tkinter.Button(frame2,text='Add Book',command=lambda :[addbook1()])
addbook.grid(row=1,column=0,sticky='nsew')
delbook=tkinter.Button(frame2,text='Delete Book',command=lambda :[delbook1()])
delbook.grid(row=1,column=1,sticky='nsew')
search=tkinter.Label(frame2,text='Search')
search.grid(row=2,column=0,sticky='nsew')
auth=tkinter.Button(frame2,text='By Author',command=searchauthor)
auth.grid(row=2,column=1,sticky='nsew')
title=tkinter.Button(frame2,text='By Title',command=searchtitle)
title.grid(row=2,column=2,sticky='nsew')

membership=tkinter.Label(frame2,text='Membership')
membership.grid(row=3,column=0,sticky='nsew')
addmember=tkinter.Button(frame2,text='Add',command=addmem)
addmember.grid(row=3,column=1,sticky='nsew')
delmember=tkinter.Button(frame2,text='Delete',command=delmem)
delmember.grid(row=3,column=2,sticky='nsew')


checkout=tkinter.Button(frame2,text='CheckOuts')
checkout.grid(row=4,column=0,sticky='nsew')
returns=tkinter.Button(frame2,text='Returns')
returns.grid(row=4,column=1,sticky='nsew')

#booktitle = tkinter.Label(frame3, text="Book name: %s" % item['Book name']) To place both key and value
window.mainloop()
